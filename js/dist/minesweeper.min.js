function Grid(b,a,d,c){this.dims={x:b,y:a};this.numMines=d;this.numFlags=0;this.numOpenTiles=0;this.stopCallback=c;this.tiles=[]}Grid.prototype.GenerateTiles=function(){var b;for(var c=0;c<this.dims.y;c++){b=[];for(var a=0;a<this.dims.x;a++){b.push(new Tile(a,c))}this.tiles.push(b)}};Grid.prototype.SetMines=function(){var c=this.numMines,b,a;if(this.numMinesRemaining>=this.dims.x*this.dims.y){alert("Invalid Game: Too many mines");return}while(c>0){b=Math.floor((Math.random()*this.dims.x));a=Math.floor((Math.random()*this.dims.y));if(this.tiles[a][b].isMine===false){this.SetMine(b,a);c--}}};Grid.prototype.SetMine=function(a,b){this.tiles[b][a].isMine=true;this.IncrementAdjacentTiles(a,b)};Grid.prototype.ToggleFlag=function(a,b){this.numFlags+=this.tiles[b][a].isFlagged?-1:+1;this.tiles[b][a].ToggleFlag()};Grid.prototype.OpenTile=function(a,c){var b=this.tiles[c][a];if(b.isOpen===false){this.numFlags+=b.isFlagged?-1:0;this.numOpenTiles++;b.Open();if(b.isMine===true){alert("BOOM: You lose.");this.stopCallback()}}};Grid.prototype.IncrementAdjacentTiles=function(b,c){for(var d=c-1;d<=c+1;d++){for(var a=b-1;a<=b+1;a++){if(this.InRange(a,d)&&!(a===b&&d===c)){this.tiles[d][a].numAdjMines++}}}};Grid.prototype.InRange=function(a,b){return(a>=0&&a<this.dims.x)&&(b>=0&&b<this.dims.y)};Grid.prototype.LogBoard=function(){var b;for(var c=0;c<this.dims.y;c++){b="";for(var a=0;a<this.dims.x;a++){b+=this.tiles[c][a].isMine?"x ":this.tiles[c][a].numAdjMines+" "}console.log(b)}};Grid.prototype.ProcessClick=function(c){var b,f,a,d;b=$(c.target).hasClass("tile")?c.target:$(c.target.parentElement).hasClass("tile")?c.target.parentElement:null;if(b!==null){a=$(b).data("x");d=$(b).data("y");if(this.tiles[d][a].numAdjMines!==0){this.OpenTile(a,d)}else{f=[[a,d]];while(f.length!=0){a=f[0][0];d=f[0][1];if(this.InRange(a,d)&&this.tiles[d][a].isOpen===false){if(this.tiles[d][a].numAdjMines===0){f.push.apply(f,[[a-1,d-1],[a,d-1],[a+1,d-1],[a-1,d],[a+1,d],[a-1,d+1],[a,d+1],[a+1,d+1]])}this.OpenTile(a,d)}f.shift()}}}};Grid.prototype.ProcessRightClick=function(c){var b,a,d;b=$(c.target).hasClass("tile")?c.target:$(c.target.parentElement).hasClass("tile")?c.target.parentElement:null;if(b!==null){a=$(b).data("x");d=$(b).data("y");if(this.tiles[d][a].isOpen===false){this.ToggleFlag(a,d)}}};function Minesweeper(b,a){this.settings=a||{};this.settings.dims=this.settings.dims||{x:8,y:8};this.settings.numMines=this.settings.numMines||10;this.mode={};this.mode.play=true;this.mode.cheat=false;this.$container=$(b).addClass("minesweeper");this.$gameBoard=$("<div/>",{"class":"board mask"})}Minesweeper.prototype.Start=function(){this.grid=new Grid(this.settings.dims.x,this.settings.dims.y,this.settings.numMines,this.Stop.bind(this));this.grid.GenerateTiles();this.grid.SetMines();this.RenderHeader();this.RenderBoard();this.RenderFooter();this.$gameBoard.click((function(a){if(this.CheckPlayMode()===true){this.grid.ProcessClick(a);this.UpdateHeader()}}).bind(this));this.$gameBoard.bind("contextmenu",(function(a){a.preventDefault();if(this.CheckPlayMode()===true){this.grid.ProcessRightClick(a);this.UpdateHeader()}}).bind(this));this.mode.play=true};Minesweeper.prototype.Stop=function(){this.mode.play=false};Minesweeper.prototype.CheckPlayMode=function(){if(this.mode.play===true){return true}else{alert("This game is already over... Start a new game to play again.");return false}};Minesweeper.prototype.ProcessButton=function(a){switch(a){case"validate":if(this.CheckPlayMode()===true){if(this.grid.numOpenTiles==((this.settings.dims.x*this.settings.dims.y)-this.settings.numMines)){alert("Valid Grid: You Win!")}else{alert("Invalid Grid: You lose.")}this.mode.play=false}break;case"reset":if(this.cheatModeOn){this.ToggleCheat()}this.$container.empty();this.$gameBoard.empty();this.Start();break;case"cheat":this.ToggleCheat();break}};Minesweeper.prototype.ToggleCheat=function(){var a=$("#ms-btn-cheat");if($(a).hasClass("active")){$(a).text("Cheat (OFF)")}else{$(a).text("Cheat (ON)")}$(a).toggleClass("active");this.$gameBoard.toggleClass("mask");this.cheatModeOn=!this.cheatModeOn};Minesweeper.prototype.RenderHeader=function(){var c,b,f;var d=$("<div/>",{"class":"header row"});var a=$("<div/>",{"class":"col-xs-12 col-sm-10 col-sm-offset-1"});for(var e=1;e<5;e++){c=$("<div/>",{"class":"col-xs-3"});switch(e){case 1:b=$("<span/>",{"class":"fa fa-th"});f=$("<span/>",{id:"ms-grid"});break;case 2:b=$("<span/>",{"class":"fa fa-bomb"});f=$("<span/>",{id:"ms-mines"});break;case 3:b=$("<span/>",{"class":"fa fa-flag"});f=$("<span/>",{id:"ms-flags"});break;case 4:b=$("<span/>",{"class":"fa fa-check-circle-o"});f=$("<span/>",{id:"ms-tiles"});break}c.append(b).append(f);a.append(c)}d.append(a);this.$container.append(d);this.UpdateHeader()};Minesweeper.prototype.RenderBoard=function(){var b;var c=$("<div/>",{"class":"board-container row"});for(var d=0;d<this.grid.dims.y;d++){b=$("<div/>",{"class":"board-row"});for(var a=0;a<this.grid.dims.x;a++){b.append(this.grid.tiles[d][a].Render(a,d))}this.$gameBoard.append(b)}c.append(this.$gameBoard);this.$container.append(c)};Minesweeper.prototype.RenderFooter=function(){var e,b;var c=$("<div/>",{"class":"footer row"});var a=$("<div/>",{"class":"col-xs-12 col-sm-8 col-sm-offset-2"});for(var d=1;d<4;d++){e=$("<div/>",{"class":"ms-btn"});b=$("<div/>",{"class":"col-xs-6 col-xs-offset-3 col-sm-4 col-sm-offset-0"});switch(d){case 1:e.text("Validate");e.click((function(){this.ProcessButton("validate")}).bind(this));break;case 2:e.text("New Game");e.click((function(){this.ProcessButton("reset")}).bind(this));break;case 3:e.text("Cheat (OFF)").attr("id","ms-btn-cheat");e.click((function(){this.ProcessButton("cheat")}).bind(this));break}a.append(b.append(e))}c.append(a);this.$container.append(c)};Minesweeper.prototype.UpdateHeader=function(){$("#ms-grid").text(this.settings.dims.x+" x "+this.settings.dims.y);$("#ms-mines").text(this.settings.numMines);$("#ms-flags").text(this.grid.numFlags);$("#ms-tiles").text(this.grid.numOpenTiles+" / "+((this.settings.dims.x*this.settings.dims.y)-this.settings.numMines))};var Tile=function(a,b){this.pos={x:a,y:b};this.isOpen=false;this.isFlagged=false;this.isMine=false;this.numAdjMines=0};Tile.prototype.Render=function(){var a=$("<span/>");this.$div=$("<div/>",{"class":"tile","data-x":this.pos.x,"data-y":this.pos.y});if(this.isMine){a.addClass("fa fa-bomb")}else{if(this.numAdjMines>0){a.text(this.numAdjMines)}}this.$div.append(a);return this.$div};Tile.prototype.Open=function(){this.isOpen=true;if(this.isFlagged){this.ToggleFlag()}if(this.isMine){this.$div.addClass("open")}else{this.$div.addClass("open box"+this.numAdjMines)}};Tile.prototype.ToggleFlag=function(){if(this.isFlagged===false){this.$div.append($("<span/>",{"class":"fa fa-flag"}))}else{this.$div.children().remove(".fa-flag")}this.isFlagged=!this.isFlagged;this.$div.toggleClass("flag")};